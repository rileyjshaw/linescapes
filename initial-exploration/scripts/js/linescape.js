// Generated by CoffeeScript 1.6.3
var Linescape, linescape,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Linescape = (function() {
  function Linescape() {
    this.paint = __bind(this.paint, this);
    this.resize = __bind(this.resize, this);
    var canvas;
    canvas = document.getElementById('canvas');
    this.ctx = canvas.getContext('2d');
    this.resize();
  }

  Linescape.prototype.resize = function() {
    this.width = canvas.width = document.body.clientWidth;
    return setTimeout(function() {
      return this.height = canvas.height = document.body.clientHeight;
    }, 0);
  };

  Linescape.prototype.paint = function(avg, range, color) {
    var halfstep, height, i, skew, step, _i, _j, _results;
    skew = Math.random() * range;
    step = range / 8;
    halfstep = step / 2;
    this.ctx.strokeStyle = color;
    this.ctx.fillStyle = 'rgba(255,255,255, .1)';
    this.ctx.fillRect(0, 0, this.width, this.height);
    for (i = _i = 0; 0 <= this.width ? _i <= this.width : _i >= this.width; i = 0 <= this.width ? ++_i : --_i) {
      skew += Math.random() * step - halfstep;
      this.ctx.beginPath();
      this.ctx.moveTo(i, avg + skew);
      this.ctx.lineTo(i, avg - skew);
      this.ctx.stroke();
      this.ctx.closePath();
    }
  };

  return Linescape;

})();

linescape = new Linescape;

window.addEventListener('load', linescape.init, false);

window.addEventListener('resize', linescape.init, false);

/*
//@ sourceMappingURL=linescape.map
*/

setTimeout(function() {
  linescape.height = document.body.clientHeight;
  for (var height = 0; height <= 800; height += 50) {
    linescape.paint(height, 80, 'blue');
  }
}, 200);
